
export interface IPgError {
    code: string;
    description: string;
}

/** Get an error description for a given postgres error code */
export function getPgError(code: string): IPgError | undefined {
    return pgErrors.find(item => item.code === code);
}

/** An error indicating a database table is undefined. */
export const PgUndefinedTable = '42P01';

/**
 * Postgres error codes
 * https://www.postgresql.org/docs/12/errcodes-appendix.html
 */
const pgErrors = new Array<IPgError>();
pgErrors.push({code: '00000', description: 'successful_completion'});
pgErrors.push({code: '01000', description: 'warning'});
pgErrors.push({code: '0100C', description: 'dynamic_result_sets_returned'});
pgErrors.push({code: '01008', description: 'implicit_zero_bit_padding'});
pgErrors.push({code: '01003', description: 'null_value_eliminated_in_set_function'});
pgErrors.push({code: '01007', description: 'privilege_not_granted'});
pgErrors.push({code: '01006', description: 'privilege_not_revoked'});
pgErrors.push({code: '01004', description: 'string_data_right_truncation'});
pgErrors.push({code: '01P01', description: 'deprecated_feature'});
pgErrors.push({code: '02000', description: 'no_data'});
pgErrors.push({code: '02001', description: 'no_additional_dynamic_result_sets_returned'});
pgErrors.push({code: '03000', description: 'sql_statement_not_yet_complete'});
pgErrors.push({code: '08000', description: 'connection_exception'});
pgErrors.push({code: '08003', description: 'connection_does_not_exist'});
pgErrors.push({code: '08006', description: 'connection_failure'});
pgErrors.push({code: '08001', description: 'sqlclient_unable_to_establish_sqlconnection'});
pgErrors.push({code: '08004', description: 'sqlserver_rejected_establishment_of_sqlconnection'});
pgErrors.push({code: '08007', description: 'transaction_resolution_unknown'});
pgErrors.push({code: '08P01', description: 'protocol_violation'});
pgErrors.push({code: '09000', description: 'triggered_action_exception'});
pgErrors.push({code: '0A000', description: 'feature_not_supported'});
pgErrors.push({code: '0B000', description: 'invalid_transaction_initiation'});
pgErrors.push({code: '0F000', description: 'locator_exception'});
pgErrors.push({code: '0F001', description: 'invalid_locator_specification'});
pgErrors.push({code: '0L000', description: 'invalid_grantor'});
pgErrors.push({code: '0LP01', description: 'invalid_grant_operation'});
pgErrors.push({code: '0P000', description: 'invalid_role_specification'});
pgErrors.push({code: '0Z000', description: 'diagnostics_exception'});
pgErrors.push({code: '0Z002', description: 'stacked_diagnostics_accessed_without_active_handler'});
pgErrors.push({code: '20000', description: 'case_not_found'});
pgErrors.push({code: '21000', description: 'cardinality_violation'});
pgErrors.push({code: '22000', description: 'data_exception'});
pgErrors.push({code: '2202E', description: 'array_subscript_error'});
pgErrors.push({code: '22021', description: 'character_not_in_repertoire'});
pgErrors.push({code: '22008', description: 'datetime_field_overflow'});
pgErrors.push({code: '22012', description: 'division_by_zero'});
pgErrors.push({code: '22005', description: 'error_in_assignment'});
pgErrors.push({code: '2200B', description: 'escape_character_conflict'});
pgErrors.push({code: '22022', description: 'indicator_overflow'});
pgErrors.push({code: '22015', description: 'interval_field_overflow'});
pgErrors.push({code: '2201E', description: 'invalid_argument_for_logarithm'});
pgErrors.push({code: '22014', description: 'invalid_argument_for_ntile_function'});
pgErrors.push({code: '22016', description: 'invalid_argument_for_nth_value_function'});
pgErrors.push({code: '2201F', description: 'invalid_argument_for_power_function'});
pgErrors.push({code: '2201G', description: 'invalid_argument_for_width_bucket_function'});
pgErrors.push({code: '22018', description: 'invalid_character_value_for_cast'});
pgErrors.push({code: '22007', description: 'invalid_datetime_format'});
pgErrors.push({code: '22019', description: 'invalid_escape_character'});
pgErrors.push({code: '2200D', description: 'invalid_escape_octet'});
pgErrors.push({code: '22025', description: 'invalid_escape_sequence'});
pgErrors.push({code: '22P06', description: 'nonstandard_use_of_escape_character'});
pgErrors.push({code: '22010', description: 'invalid_indicator_parameter_value'});
pgErrors.push({code: '22023', description: 'invalid_parameter_value'});
pgErrors.push({code: '22013', description: 'invalid_preceding_or_following_size'});
pgErrors.push({code: '2201B', description: 'invalid_regular_expression'});
pgErrors.push({code: '2201W', description: 'invalid_row_count_in_limit_clause'});
pgErrors.push({code: '2201X', description: 'invalid_row_count_in_result_offset_clause'});
pgErrors.push({code: '2202H', description: 'invalid_tablesample_argument'});
pgErrors.push({code: '2202G', description: 'invalid_tablesample_repeat'});
pgErrors.push({code: '22009', description: 'invalid_time_zone_displacement_value'});
pgErrors.push({code: '2200C', description: 'invalid_use_of_escape_character'});
pgErrors.push({code: '2200G', description: 'most_specific_type_mismatch'});
pgErrors.push({code: '22004', description: 'null_value_not_allowed'});
pgErrors.push({code: '22002', description: 'null_value_no_indicator_parameter'});
pgErrors.push({code: '22003', description: 'numeric_value_out_of_range'});
pgErrors.push({code: '2200H', description: 'sequence_generator_limit_exceeded'});
pgErrors.push({code: '22026', description: 'string_data_length_mismatch'});
pgErrors.push({code: '22001', description: 'string_data_right_truncation'});
pgErrors.push({code: '22011', description: 'substring_error'});
pgErrors.push({code: '22027', description: 'trim_error'});
pgErrors.push({code: '22024', description: 'unterminated_c_string'});
pgErrors.push({code: '2200F', description: 'zero_length_character_string'});
pgErrors.push({code: '22P01', description: 'floating_point_exception'});
pgErrors.push({code: '22P02', description: 'invalid_text_representation'});
pgErrors.push({code: '22P03', description: 'invalid_binary_representation'});
pgErrors.push({code: '22P04', description: 'bad_copy_file_format'});
pgErrors.push({code: '22P05', description: 'untranslatable_character'});
pgErrors.push({code: '2200L', description: 'not_an_xml_document'});
pgErrors.push({code: '2200M', description: 'invalid_xml_document'});
pgErrors.push({code: '2200N', description: 'invalid_xml_content'});
pgErrors.push({code: '2200S', description: 'invalid_xml_comment'});
pgErrors.push({code: '2200T', description: 'invalid_xml_processing_instruction'});
pgErrors.push({code: '22030', description: 'duplicate_json_object_key_value'});
pgErrors.push({code: '22032', description: 'invalid_json_text'});
pgErrors.push({code: '22033', description: 'invalid_sql_json_subscript'});
pgErrors.push({code: '22034', description: 'more_than_one_sql_json_item'});
pgErrors.push({code: '22035', description: 'no_sql_json_item'});
pgErrors.push({code: '22036', description: 'non_numeric_sql_json_item'});
pgErrors.push({code: '22037', description: 'non_unique_keys_in_a_json_object'});
pgErrors.push({code: '22038', description: 'singleton_sql_json_item_required'});
pgErrors.push({code: '22039', description: 'sql_json_array_not_found'});
pgErrors.push({code: '2203A', description: 'sql_json_member_not_found'});
pgErrors.push({code: '2203B', description: 'sql_json_number_not_found'});
pgErrors.push({code: '2203C', description: 'sql_json_object_not_found'});
pgErrors.push({code: '2203D', description: 'too_many_json_array_elements'});
pgErrors.push({code: '2203E', description: 'too_many_json_object_members'});
pgErrors.push({code: '2203F', description: 'sql_json_scalar_required'});
pgErrors.push({code: '23000', description: 'integrity_constraint_violation'});
pgErrors.push({code: '23001', description: 'restrict_violation'});
pgErrors.push({code: '23502', description: 'not_null_violation'});
pgErrors.push({code: '23503', description: 'foreign_key_violation'});
pgErrors.push({code: '23505', description: 'unique_violation'});
pgErrors.push({code: '23514', description: 'check_violation'});
pgErrors.push({code: '23P01', description: 'exclusion_violation'});
pgErrors.push({code: '24000', description: 'invalid_cursor_state'});
pgErrors.push({code: '25000', description: 'invalid_transaction_state'});
pgErrors.push({code: '25001', description: 'active_sql_transaction'});
pgErrors.push({code: '25002', description: 'branch_transaction_already_active'});
pgErrors.push({code: '25008', description: 'held_cursor_requires_same_isolation_level'});
pgErrors.push({code: '25003', description: 'inappropriate_access_mode_for_branch_transaction'});
pgErrors.push({code: '25004', description: 'inappropriate_isolation_level_for_branch_transaction'});
pgErrors.push({code: '25005', description: 'no_active_sql_transaction_for_branch_transaction'});
pgErrors.push({code: '25006', description: 'read_only_sql_transaction'});
pgErrors.push({code: '25007', description: 'schema_and_data_statement_mixing_not_supported'});
pgErrors.push({code: '25P01', description: 'no_active_sql_transaction'});
pgErrors.push({code: '25P02', description: 'in_failed_sql_transaction'});
pgErrors.push({code: '25P03', description: 'idle_in_transaction_session_timeout'});
pgErrors.push({code: '26000', description: 'invalid_sql_statement_name'});
pgErrors.push({code: '27000', description: 'triggered_data_change_violation'});
pgErrors.push({code: '28000', description: 'invalid_authorization_specification'});
pgErrors.push({code: '28P01', description: 'invalid_password'});
pgErrors.push({code: '2B000', description: 'dependent_privilege_descriptors_still_exist'});
pgErrors.push({code: '2BP01', description: 'dependent_objects_still_exist'});
pgErrors.push({code: '2D000', description: 'invalid_transaction_termination'});
pgErrors.push({code: '2F000', description: 'sql_routine_exception'});
pgErrors.push({code: '2F005', description: 'function_executed_no_return_statement'});
pgErrors.push({code: '2F002', description: 'modifying_sql_data_not_permitted'});
pgErrors.push({code: '2F003', description: 'prohibited_sql_statement_attempted'});
pgErrors.push({code: '2F004', description: 'reading_sql_data_not_permitted'});
pgErrors.push({code: '34000', description: 'invalid_cursor_name'});
pgErrors.push({code: '38000', description: 'external_routine_exception'});
pgErrors.push({code: '38001', description: 'containing_sql_not_permitted'});
pgErrors.push({code: '38002', description: 'modifying_sql_data_not_permitted'});
pgErrors.push({code: '38003', description: 'prohibited_sql_statement_attempted'});
pgErrors.push({code: '38004', description: 'reading_sql_data_not_permitted'});
pgErrors.push({code: '39000', description: 'external_routine_invocation_exception'});
pgErrors.push({code: '39001', description: 'invalid_sqlstate_returned'});
pgErrors.push({code: '39004', description: 'null_value_not_allowed'});
pgErrors.push({code: '39P01', description: 'trigger_protocol_violated'});
pgErrors.push({code: '39P02', description: 'srf_protocol_violated'});
pgErrors.push({code: '39P03', description: 'event_trigger_protocol_violated'});
pgErrors.push({code: '3B000', description: 'savepoint_exception'});
pgErrors.push({code: '3B001', description: 'invalid_savepoint_specification'});
pgErrors.push({code: '3D000', description: 'invalid_catalog_name'});
pgErrors.push({code: '3F000', description: 'invalid_schema_name'});
pgErrors.push({code: '40000', description: 'transaction_rollback'});
pgErrors.push({code: '40002', description: 'transaction_integrity_constraint_violation'});
pgErrors.push({code: '40001', description: 'serialization_failure'});
pgErrors.push({code: '40003', description: 'statement_completion_unknown'});
pgErrors.push({code: '40P01', description: 'deadlock_detected'});
pgErrors.push({code: '42000', description: 'syntax_error_or_access_rule_violation'});
pgErrors.push({code: '42601', description: 'syntax_error'});
pgErrors.push({code: '42501', description: 'insufficient_privilege'});
pgErrors.push({code: '42846', description: 'cannot_coerce'});
pgErrors.push({code: '42803', description: 'grouping_error'});
pgErrors.push({code: '42P20', description: 'windowing_error'});
pgErrors.push({code: '42P19', description: 'invalid_recursion'});
pgErrors.push({code: '42830', description: 'invalid_foreign_key'});
pgErrors.push({code: '42602', description: 'invalid_name'});
pgErrors.push({code: '42622', description: 'name_too_long'});
pgErrors.push({code: '42939', description: 'reserved_name'});
pgErrors.push({code: '42804', description: 'datatype_mismatch'});
pgErrors.push({code: '42P18', description: 'indeterminate_datatype'});
pgErrors.push({code: '42P21', description: 'collation_mismatch'});
pgErrors.push({code: '42P22', description: 'indeterminate_collation'});
pgErrors.push({code: '42809', description: 'wrong_object_type'});
pgErrors.push({code: '428C9', description: 'generated_always'});
pgErrors.push({code: '42703', description: 'undefined_column'});
pgErrors.push({code: '42883', description: 'undefined_function'});
pgErrors.push({code: '42P01', description: 'undefined_table'});
pgErrors.push({code: '42P02', description: 'undefined_parameter'});
pgErrors.push({code: '42704', description: 'undefined_object'});
pgErrors.push({code: '42701', description: 'duplicate_column'});
pgErrors.push({code: '42P03', description: 'duplicate_cursor'});
pgErrors.push({code: '42P04', description: 'duplicate_database'});
pgErrors.push({code: '42723', description: 'duplicate_function'});
pgErrors.push({code: '42P05', description: 'duplicate_prepared_statement'});
pgErrors.push({code: '42P06', description: 'duplicate_schema'});
pgErrors.push({code: '42P07', description: 'duplicate_table'});
pgErrors.push({code: '42712', description: 'duplicate_alias'});
pgErrors.push({code: '42710', description: 'duplicate_object'});
pgErrors.push({code: '42702', description: 'ambiguous_column'});
pgErrors.push({code: '42725', description: 'ambiguous_function'});
pgErrors.push({code: '42P08', description: 'ambiguous_parameter'});
pgErrors.push({code: '42P09', description: 'ambiguous_alias'});
pgErrors.push({code: '42P10', description: 'invalid_column_reference'});
pgErrors.push({code: '42611', description: 'invalid_column_definition'});
pgErrors.push({code: '42P11', description: 'invalid_cursor_definition'});
pgErrors.push({code: '42P12', description: 'invalid_database_definition'});
pgErrors.push({code: '42P13', description: 'invalid_function_definition'});
pgErrors.push({code: '42P14', description: 'invalid_prepared_statement_definition'});
pgErrors.push({code: '42P15', description: 'invalid_schema_definition'});
pgErrors.push({code: '42P16', description: 'invalid_table_definition'});
pgErrors.push({code: '42P17', description: 'invalid_object_definition'});
pgErrors.push({code: '44000', description: 'with_check_option_violation'});
pgErrors.push({code: '53000', description: 'insufficient_resources'});
pgErrors.push({code: '53100', description: 'disk_full'});
pgErrors.push({code: '53200', description: 'out_of_memory'});
pgErrors.push({code: '53300', description: 'too_many_connections'});
pgErrors.push({code: '53400', description: 'configuration_limit_exceeded'});
pgErrors.push({code: '54000', description: 'program_limit_exceeded'});
pgErrors.push({code: '54001', description: 'statement_too_complex'});
pgErrors.push({code: '54011', description: 'too_many_columns'});
pgErrors.push({code: '54023', description: 'too_many_arguments'});
pgErrors.push({code: '55000', description: 'object_not_in_prerequisite_state'});
pgErrors.push({code: '55006', description: 'object_in_use'});
pgErrors.push({code: '55P02', description: 'cant_change_runtime_param'});
pgErrors.push({code: '55P03', description: 'lock_not_available'});
pgErrors.push({code: '55P04', description: 'unsafe_new_enum_value_usage'});
pgErrors.push({code: '57000', description: 'operator_intervention'});
pgErrors.push({code: '57014', description: 'query_canceled'});
pgErrors.push({code: '57P01', description: 'admin_shutdown'});
pgErrors.push({code: '57P02', description: 'crash_shutdown'});
pgErrors.push({code: '57P03', description: 'cannot_connect_now'});
pgErrors.push({code: '57P04', description: 'database_dropped'});
pgErrors.push({code: '58000', description: 'system_error'});
pgErrors.push({code: '58030', description: 'io_error'});
pgErrors.push({code: '58P01', description: 'undefined_file'});
pgErrors.push({code: '58P02', description: 'duplicate_file'});
pgErrors.push({code: '72000', description: 'snapshot_too_old'});
pgErrors.push({code: 'F0000', description: 'config_file_error'});
pgErrors.push({code: 'F0001', description: 'lock_file_exists'});
pgErrors.push({code: 'HV000', description: 'fdw_error'});
pgErrors.push({code: 'HV005', description: 'fdw_column_name_not_found'});
pgErrors.push({code: 'HV002', description: 'fdw_dynamic_parameter_value_needed'});
pgErrors.push({code: 'HV010', description: 'fdw_function_sequence_error'});
pgErrors.push({code: 'HV021', description: 'fdw_inconsistent_descriptor_information'});
pgErrors.push({code: 'HV024', description: 'fdw_invalid_attribute_value'});
pgErrors.push({code: 'HV007', description: 'fdw_invalid_column_name'});
pgErrors.push({code: 'HV008', description: 'fdw_invalid_column_number'});
pgErrors.push({code: 'HV004', description: 'fdw_invalid_data_type'});
pgErrors.push({code: 'HV006', description: 'fdw_invalid_data_type_descriptors'});
pgErrors.push({code: 'HV091', description: 'fdw_invalid_descriptor_field_identifier'});
pgErrors.push({code: 'HV00B', description: 'fdw_invalid_handle'});
pgErrors.push({code: 'HV00C', description: 'fdw_invalid_option_index'});
pgErrors.push({code: 'HV00D', description: 'fdw_invalid_option_name'});
pgErrors.push({code: 'HV090', description: 'fdw_invalid_string_length_or_buffer_length'});
pgErrors.push({code: 'HV00A', description: 'fdw_invalid_string_format'});
pgErrors.push({code: 'HV009', description: 'fdw_invalid_use_of_null_pointer'});
pgErrors.push({code: 'HV014', description: 'fdw_too_many_handles'});
pgErrors.push({code: 'HV001', description: 'fdw_out_of_memory'});
pgErrors.push({code: 'HV00P', description: 'fdw_no_schemas'});
pgErrors.push({code: 'HV00J', description: 'fdw_option_name_not_found'});
pgErrors.push({code: 'HV00K', description: 'fdw_reply_handle'});
pgErrors.push({code: 'HV00Q', description: 'fdw_schema_not_found'});
pgErrors.push({code: 'HV00R', description: 'fdw_table_not_found'});
pgErrors.push({code: 'HV00L', description: 'fdw_unable_to_create_execution'});
pgErrors.push({code: 'HV00M', description: 'fdw_unable_to_create_reply'});
pgErrors.push({code: 'HV00N', description: 'fdw_unable_to_establish_connection'});
pgErrors.push({code: 'P0000', description: 'plpgsql_error'});
pgErrors.push({code: 'P0001', description: 'raise_exception'});
pgErrors.push({code: 'P0002', description: 'no_data_found'});
pgErrors.push({code: 'P0003', description: 'too_many_rows'});
pgErrors.push({code: 'P0004', description: 'assert_failure'});
pgErrors.push({code: 'XX000', description: 'internal_error'});
pgErrors.push({code: 'XX001', description: 'data_corrupted'});
pgErrors.push({code: 'XX002', description: 'index_corrupted'});

/** Determines if the given error is a Postgres unique violation.
 * @param error The error to check.
 * @returns True if the error is a Postgres unique violation, otherwise false.
 * @see https://www.postgresql.org/docs/current/errcodes-appendix.html
 * @see https://www.postgresql.org/docs/current/errcodes-appendix.html#ERRCODE-UNIQUE-VIOLATION
 * @see https://www.postgresql.org/docs/current/errcodes-appendix.html#ERRCODE-FOREIGN-KEY-VIOLATION
 * @see https://www.postgresql.org/docs/current/errcodes-appendix.html#ERRCODE-CHECK-VIOLATION
 * @see https://www.postgresql.org/docs/current/errcodes-appendix.html#ERRCODE-NOT-NULL-VIOLATION
 * @see https://www.postgresql.org/docs/current/errcodes-appendix.html#ERRCODE-EXCLUSION-VIOLATION */
export function isPgUniqueViolation(error: any): boolean {
    return error?.code === '23505' || false;
}
